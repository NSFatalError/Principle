name: Pull request
on: pull_request

env:
  XCODE_VERSION: "16.3"

jobs:
  prepare:
    runs-on: macos-15
    outputs:
      platforms: ${{ steps.extract.outputs.platforms }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Xcode
      run: sudo xcode-select -s /Applications/Xcode_$XCODE_VERSION.app

    - name: Setup mise
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl https://mise.run | sh
        mise install
    - name: Run linters
      run: mise lint

    - name: Extract platforms
      id: extract
      run: |
        platforms=$(swift package dump-package | jq -r '[.platforms[].platformName] | unique | @json')
        echo "Platforms: $platforms"
        echo "platforms=$platforms" >> $GITHUB_OUTPUT
  
  build-and-test:
    needs: prepare
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(needs.prepare.outputs.platforms) }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Xcode
      run: sudo xcode-select -s /Applications/Xcode_$XCODE_VERSION.app
    - name: Map destinations
      if: ${{ matrix.platform != 'macos' }}
      id: destination
      run: |
        case "${{ matrix.platform }}" in
          ios)
            destination="platform=iOS Simulator,name=iPhone 16 Pro Max,OS=latest"
            ;;
          maccatalyst)
            destination="platform=macOS,variant=Mac Catalyst"
            ;;
          tvos)
            destination="platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=latest"
            ;;
          visionos)
            destination="platform=visionOS Simulator,name=Apple Vision Pro,OS=latest"
            ;;
          watchos)
            destination="platform=watchOS Simulator,name=Apple Watch Series 10 (46mm),OS=latest"
            ;;
          *)
            echo "Unknown platform: ${{ matrix.platform }}"
            exit 1
            ;;
        esac
        echo "destination=$destination" >> $GITHUB_OUTPUT

    - name: Build (SPM)
      if: ${{ matrix.platform == 'macos' }}
      run: swift build
    - name: Build (Xcode)
      if: ${{ matrix.platform != 'macos' }}
      run: |
        xcodebuild build \
          -scheme $GITHUB_REPOSITORY-Package \
          -destination "${{ steps.destination.outputs.destination }}" \
          | xcbeautify

    - name: Test (SPM)
      if: ${{ matrix.platform == 'macos' }}
      run: swift test
    - name: Test (Xcode)
      if: ${{ matrix.platform != 'macos' }}
      run: |
        xcodebuild test \
          -scheme $GITHUB_REPOSITORY-Package \
          -destination "${{ steps.destination.outputs.destination }}" \
          | xcbeautify